<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

    <!-- Druid configuration -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="5"/>
        <property name="minIdle" value="5"/>
        <property name="maxActive" value="30"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <!-- Slave DataSource -->
    <bean id="slaveDataSourceOne" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.jdbcUrl.1}"/>
        <property name="username" value="${jdbc.username.1}"/>
        <property name="password" value="${jdbc.password.1}"/>
        <property name="initialSize" value="5"/>
        <property name="minIdle" value="5"/>
        <property name="maxActive" value="30"/>
        <property name="maxWait" value="60000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="filters" value="stat"/>
    </bean>

    <!-- 配置 Routing4DB 数据源 -->
    <bean id="routing4DBDataSource" class="com.google.code.routing4db.datasource.Routing4DBDataSource">
        <property name="targetDataSources">
            <map>
                <entry key="dataSource" value-ref="dataSource" /><!-- Master Datasource -->
                <entry key="slaveDataSourceOne" value-ref="slaveDataSourceOne" /><!-- Slave DataSource 1 -->
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource" />
    </bean>

    <!-- 分页参数：转换器 -->
    <bean class="com.caimao.gjs.server.base.framework.PageConverterFactory">
        <property name="converters">
            <list>
                <value>com.caimao.gjs.server.base.framework.BizBasePageConvertor</value>
            </list>
        </property>
    </bean>
    <!-- 分页处理:拦截器 -->
    <bean id="paginationInterceptor" class="com.caimao.gjs.server.base.framework.PaginationInterceptor">
        <property name="pageMapper" value=".*WithPage.*"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="routing4DBDataSource" />
        <!-- 指定sqlMapConfig总配置文件，订制的environment在spring容器中不在生效 -->
        <property name="mapperLocations" value="classpath:/META-INF/mappers/*.xml"/>
        <property name="configLocation" value="classpath:/META-INF/spring/mybatis-config.xml"/>
        <property name="plugins">
            <list>
                <ref bean="paginationInterceptor" />
            </list>
        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- JDBC模版 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="routing4DBDataSource"/>
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg type="javax.sql.DataSource" ref="routing4DBDataSource"/>
    </bean>

    <aop:aspectj-autoproxy expose-proxy="true"/>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>


    <!-- 配置路由策略（支持：*get*、*find*） -->
    <bean id="masterSlaveStrategy" class="com.google.code.routing4db.strategy.impl.MasterSlaveStrategy">
        <property name="readMethodPatterns">
            <list>
                <value>query*</value>
                <value>select*</value>
            </list>
        </property>
        <!-- Master 数据源 -->
        <property name="masterDataSourceKey" value="dataSource"></property>

        <!-- Slaves 数据源的key从0开始，以此类推 -->
        <property name="dataSourceKeyMap">
            <map>
                <entry key="0" value="slaveDataSourceOne"></entry>
            </map>
        </property>

        <!-- 指定某些接口的方法不执行路由，若接口所有方法都执行路由，则无需配置该属性 -->
        <property name="excludeMethodPatterns">
            <list>
                <value>excludeMethodPatterns*</value>
                <value>*exclude*</value>
            </list>
        </property>
    </bean>


    <bean id="articleDAOTarget" class="com.caimao.gjs.server.dao.article.GjsArticleDAO"></bean>

    <bean id="articleDAO" class="com.google.code.routing4db.spring.RoutingSpringFactoryBean">
        <property name="targetInterface" value="com.caimao.gjs.server.dao.article.IArticleDAO"></property>
        <property name="targetObject" ref="articleDAOTarget"></property>
        <property name="routingStrategy" ref="masterSlaveStrategy"></property>
    </bean>

</beans>